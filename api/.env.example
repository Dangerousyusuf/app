# API Gateway Environment Configuration
# Copy this file to .env and update values for your environment

# Server Configuration
NODE_ENV=production
API_PORT=3001
API_HOST=0.0.0.0

# API Configuration
API_VERSION=1.0.0
API_PREFIX=/api/v1

# Backend Service Configuration
BACKEND_URL=https://backend.yourdomain.com/api
BACKEND_TIMEOUT=30000

# Security Configuration
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production-minimum-32-chars
JWT_EXPIRES_IN=24h

# HTTPS Configuration (Production)
FORCE_HTTPS=true
TRUST_PROXY=true
CORS_ALLOWLIST=https://yourdomain.com,https://www.yourdomain.com,https://api.yourdomain.com

# CORS Configuration (Development - not used in production)
CORS_ORIGINS=http://localhost:3000,http://localhost:8081,http://localhost:19006

# Rate Limiting Configuration
API_RATE_LIMIT_WINDOW_MS=900000
API_RATE_LIMIT_MAX_REQUESTS=100
AUTH_RATE_LIMIT_WINDOW_MS=900000
AUTH_RATE_LIMIT_MAX_REQUESTS=5
UPLOAD_RATE_LIMIT_WINDOW_MS=3600000
UPLOAD_RATE_LIMIT_MAX_REQUESTS=10

# File Upload Configuration
UPLOAD_PATH=../uploads
UPLOAD_MAX_SIZE=5242880
UPLOAD_ALLOWED_TYPES=image/jpeg,image/png,image/webp,image/gif

# Logging Configuration
LOG_LEVEL=info
LOG_DIR=logs

# Request Configuration
REQUEST_TIMEOUT=30000
BODY_LIMIT=10mb

# Documentation
SWAGGER_ENABLED=true

# Health Check
HEALTH_CHECK_ENABLED=true

# Security Notes:
# - Set FORCE_HTTPS=true for production
# - Set TRUST_PROXY=true when behind NGINX reverse proxy
# - Update CORS_ALLOWLIST with your actual HTTPS domains only
# - Use strong JWT secrets (minimum 32 characters)
# - Configure rate limiting based on your traffic patterns
# - Disable SWAGGER_ENABLED in production for security