openapi: 3.0.0
info:
  title: React Native + Node.js API
  description: API Gateway for Full-Stack React Native Application
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com
  license:
    name: ISC
    
servers:
  - url: http://localhost:3001/api/v1
    description: Development server
  - url: https://192.168.1.5:3001/api/v1
    description: Production server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for authentication
      
  schemas:
    User:
      type: object
      properties:
        user_id:
          type: integer
          description: Unique user identifier
        user_name:
          type: string
          description: Username
        first_name:
          type: string
          description: First name
        last_name:
          type: string
          description: Last name
        email:
          type: string
          format: email
          description: Email address
        phone:
          type: string
          description: Phone number
        profile_picture:
          type: string
          description: Profile picture filename
        created_at:
          type: string
          format: date-time
          description: Account creation date
          
    LoginRequest:
      type: object
      required:
        - user_name
        - password
      properties:
        user_name:
          type: string
          description: Username or email
        password:
          type: string
          format: password
          description: User password
          
    RegisterRequest:
      type: object
      required:
        - user_name
        - first_name
        - last_name
        - email
        - password
      properties:
        user_name:
          type: string
          description: Unique username
        first_name:
          type: string
          description: First name
        last_name:
          type: string
          description: Last name
        email:
          type: string
          format: email
          description: Email address
        password:
          type: string
          format: password
          description: Password (min 6 characters)
        phone:
          type: string
          description: Phone number
          
    AuthResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        token:
          type: string
          description: JWT token
        user:
          $ref: '#/components/schemas/User'
          
    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          description: Error message
        error:
          type: string
          description: Error details
          
    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
        data:
          type: object
          description: Response data

security:
  - bearerAuth: []

paths:
  /health:
    get:
      tags:
        - Health
      summary: API health check
      description: Check if the API is running
      security: []
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
                
  /auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      description: Authenticate user and return JWT token
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /auth/register:
    post:
      tags:
        - Authentication
      summary: User registration
      description: Create a new user account
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: Registration successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /profile/me:
    get:
      tags:
        - Profile
      summary: Get current user profile
      description: Retrieve the authenticated user's profile information
      responses:
        '200':
          description: Profile retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /profile/upload-pic:
    post:
      tags:
        - Profile
      summary: Upload profile picture
      description: Upload a new profile picture for the authenticated user
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                profilePicture:
                  type: string
                  format: binary
                  description: Image file (JPG, PNG, JPEG)
      responses:
        '200':
          description: Profile picture uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Invalid file or validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
tags:
  - name: Health
    description: API health and status endpoints
  - name: Authentication
    description: User authentication and authorization
  - name: Profile
    description: User profile management
  - name: Users
    description: User management operations